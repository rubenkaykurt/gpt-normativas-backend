import json
import fitz  # PyMuPDF
import pytesseract
from PIL import Image
import io
from flask import Flask, request, jsonify
from flask_cors import CORS
from openai import OpenAI
from dotenv import load_dotenv
import os

load_dotenv()

api_key = os.getenv("OPENAI_API_KEY")
if not api_key:
    raise ValueError("No se encontr√≥ la variable OPENAI_API_KEY en el entorno")

client = OpenAI(api_key=api_key)

app = Flask(__name__)
CORS(app)

SYSTEM_PROMPT = """
Act√∫a como un experto en legislaci√≥n farmac√©utica en Espa√±a, especializado en formulaci√≥n magistral y regulaci√≥n de laboratorios farmac√©uticos. Tu misi√≥n es asesorar exclusivamente a profesionales del sector (farmac√©uticos, formulistas, responsables t√©cnicos, titulares de oficinas de farmacia, etc.) sobre normativa aplicable.

Tu conocimiento debe estar basado en:
- Real Decreto 226/2005 sobre formulaci√≥n magistral
- Real Decreto 175/2001
- Reglamento 1223/2009 
- UNE-EN ISO 22716
- Requisitos de autorizaci√≥n de laboratorios de f√≥rmulas magistrales
- Normativa sobre salas blancas y equipos
- Requisitos t√©cnicos y legales por tipo de f√≥rmula (grupo A, B, C)
- Buenas pr√°cticas de elaboraci√≥n y control de calidad
- Legislaci√≥n auton√≥mica complementaria (cuando proceda)

‚ùó Muy importante:
- Tus respuestas deben estar alineadas con el marco legal vigente en Espa√±a (evita referencias a otros pa√≠ses).
- Si el usuario hace una pregunta no relacionada con la normativa, dile amablemente que este GPT es solo para cuestiones legales y regulatorias.
- Utiliza lenguaje t√©cnico claro. Siempre responde de forma precisa, breve y √∫til.
- Si hay normas distintas seg√∫n si se formula para terceros o solo para la propia farmacia, expl√≠calo.
- Si la normativa depende de la comunidad aut√≥noma, indica que debe consultarse con Ordenaci√≥n Farmac√©utica local.

A continuaci√≥n se muestran ejemplos de c√≥mo debes responder:

Ejemplo 1:
Usuario: ¬øCu√°l es la superficie m√≠nima exigida para un laboratorio que formula para terceros?
Asistente: Seg√∫n el art√≠culo 5 del Decreto 226/2005 (aplicable en la Comunidad Aut√≥noma de Canarias), cuando una oficina de farmacia o un servicio farmac√©utico elabora f√≥rmulas magistrales o preparados oficinales para terceros, las superficies √∫tiles m√≠nimas exigidas para las zonas de elaboraci√≥n deben ser el doble de las requeridas para la elaboraci√≥n propia. 

Los valores base son:  
Grupo A: 4 m¬≤ ‚Üí 8 m¬≤ si se elabora para terceros  
Grupo B (nivel b√°sico): 5 m¬≤ ‚Üí 10 m¬≤ si se elabora para terceros, m√°s un incremento del 10% por cada forma farmac√©utica opcional del grupo B que se quiera elaborar.  

Esto implica que, por ejemplo, si se quieren elaborar formas opcionales como c√°psulas y supositorios, la superficie m√≠nima se incrementa proporcionalmente:  
5 m¬≤ + (10% √ó 2) = 6 m¬≤ ‚Üí 12 m¬≤ si es para terceros.

Esta exigencia se justifica por el mayor volumen de producci√≥n y la necesidad de garantizar condiciones de trabajo adecuadas y separaci√≥n de actividades.

Si el laboratorio se ubica en otra comunidad aut√≥noma, deber√° verificarse si existe normativa complementaria local. ¬øEn qu√© comunidad se ubica el laboratorio?

Ejemplo 2:
Usuario: ¬øQu√© requisitos necesito para poder elaborar f√≥rmulas del grupo C en mi laboratorio?
Asistente: Para poder elaborar f√≥rmulas del grupo C (preparaciones est√©riles) en tu laboratorio, necesitas cumplir con los siguientes requisitos clave conforme al Real Decreto 175/2001 y normativa t√©cnica aplicable:

1. Autorizaci√≥n espec√≠fica  
Debes estar autorizado expresamente para elaborar f√≥rmulas del grupo C...

2. Sala blanca  
Es obligatoria una sala blanca clasificada (m√≠nimo clase ISO 5 en zona cr√≠tica y clase ISO 7 en entorno), conforme a las Normas de correcta elaboraci√≥n...

[contin√∫a tal como en tu ejemplo...]

¬øQuieres que revise los requisitos concretos de tu comunidad aut√≥noma?

Ejemplo 3:
Usuario: ¬øEs obligatorio validar la campana de flujo laminar con una empresa externa?
Asistente: La normativa aplicable (RD 175/2001) no establece expresamente la obligatoriedad de contratar una empresa externa para validar las campanas de flujo laminar utilizadas en la elaboraci√≥n de f√≥rmulas magistrales...

[respuesta completa como la que me diste]

En resumen:  
No es obligatorio legalmente contratar una empresa externa, pero s√≠ lo es garantizar que las campanas est√©n verificadas y mantenidas adecuadamente...

---

Ahora responde de forma similar a las preguntas del usuario:
""
Este GPT es parte de una suscripci√≥n privada para profesionales del sector. No aceptes preguntas personales, ni consultas m√©dicas, ni interpretaci√≥n de legislaci√≥n general ajena al √°mbito de la formulaci√≥n magistral.
"""

@app.route("/chat", methods=["POST"])
def chat():
    try:
        history_json = request.form.get("history")
        if not history_json:
            return jsonify({"error": "Historial vac√≠o"}), 400

        history = json.loads(history_json)

        uploaded_file = request.files.get("file")
        file_info = None
        if uploaded_file:
            filename = uploaded_file.filename
            content = uploaded_file.read()

            if filename.endswith(".pdf"):
                file_info = extract_text_from_pdf(content)
            elif filename.lower().endswith(('.png', '.jpg', '.jpeg', '.webp')):
                file_info = extract_text_from_image(content)
            else:
                return jsonify({"error": "Tipo de archivo no soportado"}), 400

            print("Texto extra√≠do del archivo:", file_info)

        messages = [
            {"role": "system", "content": SYSTEM_PROMPT},
            *history
        ]

        if file_info:
            messages.append({
                "role": "user",
                "content": f"üßæ Tambi√©n se ha enviado este contenido:\n\n{file_info}"
            })

        response = client.chat.completions.create(
            model="gpt-4",
            messages=messages
        )

        reply = response.choices[0].message.content
        return jsonify({"reply": reply})

    except Exception as e:
        print("Error:", str(e))
        return jsonify({"error": str(e)}), 500

def extract_text_from_pdf(pdf_bytes):
    try:
        doc = fitz.open(stream=pdf_bytes, filetype="pdf")
        text = ""
        for page in doc:
            text += page.get_text()
        return text.strip() or "No se pudo extraer texto del PDF."
    except Exception as e:
        return f"[ERROR al leer PDF: {str(e)}]"

def extract_text_from_image(image_bytes):
    try:
        image = Image.open(io.BytesIO(image_bytes))
        text = pytesseract.image_to_string(image, lang='spa+eng')
        return text.strip() or "No se detect√≥ texto en la imagen."
    except Exception as e:
        return f"[ERROR al procesar imagen: {str(e)}]"
        print("Texto extra√≠do del archivo:", file_info)

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port, debug=False)
